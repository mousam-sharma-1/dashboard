{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dash-content/dash-content.component.ts","webpack:///src/app/dashboard/dash-content/dash-content.component.html","webpack:///src/app/dashboard/dash-transparent/dash-transparent.component.ts","webpack:///src/app/dashboard/dash-transparent/dash-transparent.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/header-bar/header-bar.component.ts","webpack:///src/app/header-bar/header-bar.component.html","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","document","body","scrollTop","documentElement","getElementById","classList","add","remove","scroll","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashContentComponent","_formBuilder","data","MainArr","myform","console","log","myMatForm","value","i","splice","name","email","setValue","group","required","currentMessage","subscribe","message","onSubmit","DashTransparentComponent","Arr","push","newMessage","reset","changeMessage","DashboardComponent","HeaderBarComponent","DataService","messageSource","asObservable","next","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-dashboard';\n  @HostListener('window:scroll', [])\n\n  scroll(){\n    // console.log(\"click\")\n    if(document.body.scrollTop>20 || document.documentElement.scrollTop>20){\n    document.getElementById('main-header').classList.add('top-expand');\n  }\n  else{\n    document.getElementById('main-header').classList.remove('top-expand');\n  }\n  }\n\n}\n\n","<div class=\"main-cont\" (scroll)=\"scroll()\">\n  <app-header-bar></app-header-bar>\n  <app-dashboard></app-dashboard>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderBarComponent } from './header-bar/header-bar.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DashTransparentComponent } from './dashboard/dash-transparent/dash-transparent.component';\nimport { DashContentComponent } from './dashboard/dash-content/dash-content.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCardModule} from '@angular/material/card';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderBarComponent,\n    DashboardComponent,\n    DashTransparentComponent,\n    DashContentComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { FormGroup, FormBuilder, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dash-content',\n  templateUrl: './dash-content.component.html',\n  styleUrls: ['./dash-content.component.css']\n})\nexport class DashContentComponent implements OnInit {\n  myMatForm:FormGroup;\n  MainArr=[]\n\n  constructor(private _formBuilder: FormBuilder,private data: DataService) { }\n\n  \n  onSubmit(myform : NgForm) {\n    console.log(\"form value :: \",this.myMatForm.value);\n    // let oj = { name : this.myMatForm.value.name,number : this.myMatForm.value.number};\n    // this.MainArr.push(this.myMatForm.value)\n    console.log(this.MainArr)\n    // this.newMessage()\n  // this.myMatForm.reset();\n  }\n\n  delete(i:any){\n    console.log(i)\n    this.MainArr.splice(i,1);\n  }\n\n  update(i:any){\nconsole.log(\"UP DATA : \",this.MainArr[i].name,this.MainArr[i].email)\nthis.myMatForm.setValue({name:this.MainArr[i].name,email:this.MainArr[i].email})\n  }\n\n  ngOnInit(): void {\n    this.myMatForm= this._formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n    this.data.currentMessage.subscribe(message => this.MainArr = message)\n  }\n\n}\n","<div class=\"main-dash-content\">\n    <div class=\"custom-flex\">\n        <div *ngFor='let item of MainArr;index as i' class=\"card bg-dark text-white custom-card\" style=\"width:300px\">\n                <!-- <img class=\"card-img-top\" src=\"https://robohash.org/{{item.name}}?set=set1&size=180x200\" alt=\"Card image\" style=\"width:100%\"> -->\n                <img class=\"card-img-top\" src=\"assets/images/img_avatar1.png\" alt=\"Card image\" style=\"width:100%\">\n            <div class=\"card-body\">\n                <h4 class=\"card-title\">{{item.name}}</h4>\n                <p class=\"card-text\">{{item.email}}</p>\n                <div class=\"custom-btn\">\n                    <button class=\"btn btn-danger\" (click)=\"delete(i)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n                    <button class=\"btn btn-primary\" (click)=\"update(i)\" data-toggle=\"modal\" data-target=\"#myModal2\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"myModal2\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n  \n      <!-- Modal content-->\n      <div class=\"modal-content\">\n        <!-- <div class=\"modal-header\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n          <h4 class=\"modal-title\">Modal Header</h4>\n        </div> -->\n        <div class=\"center-heading\">Update Profile</div>\n        <div class=\"modal-body\">\n    <form  [formGroup]= \"myMatForm\" #myform>\n            <mat-form-field class=\"w-100\" appearance=\"outline\">\n                    <mat-label>Name</mat-label>\n                    <input type=\"text\" formControlName=\"name\" matInput required>\n                  </mat-form-field>\n                  <mat-form-field class=\"w-100\" appearance=\"outline\">\n                        <mat-label>Email</mat-label>\n                        <input type=\"emial\" formControlName=\"email\" matInput email required>\n                      </mat-form-field>\n                      <div class=\"container custom-btn-model\">\n                        <button [disabled]=\"true\" type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit(myform)\">Update</button>\n                        <!-- <button [disabled]='!myMatForm.valid' type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit(myform)\">Update</button> -->\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n                    </div>\n            </form>\n        </div>\n       \n      </div>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, NgForm, FormBuilder } from '@angular/forms';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-dash-transparent',\n  templateUrl: './dash-transparent.component.html',\n  styleUrls: ['./dash-transparent.component.css']\n})\nexport class DashTransparentComponent implements OnInit {\n  myMatForm:FormGroup;\n  Arr=[]\n  constructor(private _formBuilder: FormBuilder,private data: DataService) { }\n\n  onSubmit(myform : NgForm) {\n    console.log(\"form value :: \",this.myMatForm.value);\n    // let oj = { name : this.myMatForm.value.name,number : this.myMatForm.value.number};\n    this.Arr.push(this.myMatForm.value)\n    console.log(this.Arr)\n    this.newMessage()\n  this.myMatForm.reset();\n  }\n\n  newMessage() {\n    this.data.changeMessage(this.Arr)\n  }\n\n  ngOnInit() {\n    this.myMatForm= this._formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.data.currentMessage.subscribe(message => this.Arr = message)\n\n  }\n\n}\n","<div class=\"main-dash-trans\">\n <span data-toggle=\"modal\" data-target=\"#myModal\"><div class=\"rounded-circle add-btn\" data-toggle=\"tooltip\" title=\"Add\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></div></span>\n</div>\n\n<div id=\"myModal\" class=\"modal fade\" role=\"dialog\">\n        <div class=\"modal-dialog\">\n      \n          <!-- Modal content-->\n          <div class=\"modal-content\">\n            <!-- <div class=\"modal-header\">\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n              <h4 class=\"modal-title\">Modal Header</h4>\n            </div> -->\n            <div class=\"center-heading\">Add Profile</div>\n            <div class=\"modal-body\">\n        <form  [formGroup]= \"myMatForm\" #myform>\n                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                        <mat-label>Name</mat-label>\n                        <input type=\"text\" formControlName=\"name\" matInput required>\n                      </mat-form-field>\n                      <mat-form-field class=\"w-100\" appearance=\"outline\">\n                            <mat-label>Email</mat-label>\n                            <input type=\"emial\" formControlName=\"email\" matInput email required>\n                          </mat-form-field>\n                          <div class=\"container custom-btn\">\n                                <button [disabled]='!myMatForm.valid' type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit(myform)\">ADD</button>\n                                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                </form>\n            </div>\n           \n          </div>\n      \n        </div>\n      </div>\n<!-- <div class=\"example-container\"> -->\n      \n<!-- </div> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-dash\">\n    <app-dash-transparent></app-dash-transparent>\n    <app-dash-content></app-dash-content>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery'\n\n@Component({\n  selector: 'app-header-bar',\n  templateUrl: './header-bar.component.html',\n  styleUrls: ['./header-bar.component.css']\n})\nexport class HeaderBarComponent implements OnInit {\n\n  constructor() { \n    // interface JQuery {\n    //   tooltip():void;\n    // }\n    // $(document).ready(function(){\n    //  ($('.logo') as any ).tooltip();   \n    // });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-header\" id=\"main-header\">\n  <div class=\"header-container\">\n  <div class=\"rounded-circle logo\" data-toggle=\"tooltip\" title=\"Menu\"><i class=\"fa fa-bars\" aria-hidden=\"true\"></i></div>\n  <div class=\"center-heading\">Dashboard</div>\n  <div class=\" rounded-circle logout-btn\" data-toggle=\"tooltip\" title=\"Logout !\"><i class=\"fa fa-power-off\" aria-hidden=\"true\"></i></div>\n</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  Arr=[]\n\n  private messageSource = new BehaviorSubject(this.Arr);\n  currentMessage = this.messageSource.asObservable();\n\n  constructor() { }\n\n  changeMessage(message:any) {\n    this.messageSource.next(message)\n    console.log(\"SERVICE :: \",message)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}